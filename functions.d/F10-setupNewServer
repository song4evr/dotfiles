#=====  FUNCTION  ===============================================================
#          NAME:  setupNewServer
#   DESCRIPTION:  Configures access to a new server for the current user
#    PARAMETERS:  Target host to configure, username for access
#       RETURNS:  0 if success, 1 otherwise
#==============================================================================
function setupNewServer
{
    trap '[ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] || set +x; [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v; set -o noclobber' INT TERM EXIT;

    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x || set +x;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v || set +v;

    set +o noclobber;
    typeset METHOD_NAME="${0}#{FUNCNAME[0]}";
    typeset -i RETURN_CODE=0;

    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && writeLogEntry "PERFORMANCE" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} START: $(date +"${TIMESTAMP_OPTS}")";
    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && typeset -i START_EPOCH=$(date +"%s");

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} -> enter";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "Provided arguments: ${*}";

    if [ ${#} -eq 0 ]
    then
        RETURN_CODE=3;

        writeLogEntry "STDERR" "${METHOD_NAME} - Configure access to a newly provisioned host";
        writeLogEntry "STDERR" "Usage: ${METHOD_NAME} [ hostname ] [ username ]
                -> The hostname to provision against
                -> The username for access to the target server";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RETURN_CODE -> ${RETURN_CODE}";
        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} -> exit";

        [ ! -z "${HOST_NAME}" ] && unset HOST_NAME;
        [ ! -z "${HOSTLIST[*]}" ] && unset HOSTLIST;
        [ ! -z "${AUTH_DATA}" ] && unset AUTH_DATA;
        [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
        [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
        [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
        [ ! -z "${USER_NAME}" ] && unset USER_NAME;
        [ ! -z "${RET_CODE}" ] && unset RET_CODE;
        [ ! -z "${SETUP_NEW_SYSTEM}" ] && unset SETUP_NEW_SYSTEM;

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

        [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && typeset -i END_EPOCH=$(date +"%s");
        [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && typeset -i RUNTIME=$(( START_EPOCH - END_EPOCH ));
        [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && writeLogEntry "PERFORMANCE" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} TOTAL RUNTIME: $(( RUNTIME / 60)) MINUTES, TOTAL ELAPSED: $(( RUNTIME % 60)) SECONDS";
        [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && writeLogEntry "PERFORMANCE" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} END: $(date +"${TIMESTAMP_OPTS}")";

        return ${RETURN_CODE};
    fi

    [ -f "${1}" ] && typeset -a HOSTLIST=( $(<"${1}") ) || typeset -a HOSTLIST=("${1}");
    [ ${#} -eq 2 ] && typeset -a USER_NAME="${2}" || typeset USER_NAME="${LOGNAME}";
    typeset -x SETUP_NEW_SYSTEM="${_TRUE}";

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "TARGET_HOST -> ${TARGET_HOST}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "USERNAME -> ${USERNAME}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "AUTH_DATA -> ${AUTH_DATA}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "SETUP_NEW_SYSTEM -> ${SETUP_NEW_SYSTEM}";

    for TARGET_HOST in ${HOSTLIST[*]}
    do
        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "TARGET_HOST -> ${TARGET_HOST}";

        typeset ADD_HOST_NAME="$(cut -d ":" -f 1 <<< "${TARGET_HOST}")";
        typeset ADD_USER_NAME="$(cut -d ":" -f 2 <<< "${TARGET_HOST}")";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "ADD_HOST_NAME -> ${ADD_HOST_NAME}";
        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "ADD_USER_NAME -> ${ADD_USER_NAME}";

        [ ! -z "${ADD_USER_NAME}" ] && typeset USER_NAME="${ADD_USER_NAME}";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "USER_NAME -> ${USER_NAME}";

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

        validateServerAvailability "${ADD_HOST_NAME}" 22;
        typeset -i RET_CODE=${?};

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x || set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v || set +v;

        set +o noclobber;
        typeset METHOD_NAME="${0}#{FUNCNAME[0]}";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RET_CODE -> ${RET_CODE}";

        if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
        then
            writeLogEntry "ERROR" "${METHOD_NAME}" "${0}" "${LINENO}" "Target host ${ADD_HOST_NAME} does not appear to be available.";
            writeLogEntry "STDERR" "Failed to execute command. Cannot continue."

            [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
            [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
            [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
            [ ! -z "${USER_NAME}" ] && unset USER_NAME;
            [ ! -z "${RET_CODE}" ] && unset RET_CODE;

            (( ERROR_COUNT += 1 ));

            continue;
        fi

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

        getHostKeys "${ADD_HOST_NAME}";
        typeset -i RET_CODE=${?};

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x || set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v || set +v;

        set +o noclobber;
        typeset METHOD_NAME="${0}#{FUNCNAME[0]}";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RET_CODE -> ${RET_CODE}";

        if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
        then
            writeLogEntry "ERROR" "${METHOD_NAME}" "${0}" "${LINENO}" "Target host ${ADD_HOST_NAME} does not appear to have SSH host keys available.";
            writeLogEntry "STDERR" "Failed to execute command. Cannot continue."

            [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
            [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
            [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
            [ ! -z "${USER_NAME}" ] && unset USER_NAME;
            [ ! -z "${RET_CODE}" ] && unset RET_CODE;

            (( ERROR_COUNT += 1 ));

            continue;
        fi

        ## change password
        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

        modifyAccountPassword "${TARGET_HOST}" "${USER_NAME}";
        typeset -i RET_CODE=${?};

        [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x || set +x;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v || set +v;

        set +o noclobber;
        typeset METHOD_NAME="${0}#{FUNCNAME[0]}";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RET_CODE -> ${RET_CODE}";

        if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
        then
            writeLogEntry "ERROR" "${METHOD_NAME}" "${0}" "${LINENO}" "Failed to modify password for account ${USER_NAME} on target host ${TARGET_HOST}";
            writeLogEntry "STDERR" "Failed to execute command. Cannot continue."

            [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
            [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
            [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
            [ ! -z "${USER_NAME}" ] && unset USER_NAME;
            [ ! -z "${RET_CODE}" ] && unset RET_CODE;

            (( ERROR_COUNT += 1 ));

            continue;
        else
            [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
            [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

            buildSshConfig "${ADD_HOST_NAME}" "${USER_NAME}";
            typeset -i RET_CODE=${?};

            [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x || set +x;
            [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v || set +v;

            set +o noclobber;
            typeset METHOD_NAME="${0}#{FUNCNAME[0]}";

            [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RET_CODE -> ${RET_CODE}";

            if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
            then
                RETURN_CODE=1;

                writeLogEntry "ERROR" "${METHOD_NAME}" "${0}" "${LINENO}" "Failed to add configuration for ${TARGET_HOST} to SSH configuration.";
                writeLogEntry "STDERR" "${METHOD_NAME}" "${0}" "${LINENO}" "Failed to add configuration for ${TARGET_HOST} to SSH configuration.";
            fi

            ## copy profile
            /usr/bin/env expect -f ${HOME}/.lib/rsync "${TARGET_HOST}" "${USERNAME}" "local" "${HOME}/" "/home/${USERNAME}/" "${AUTH_DATA}";
            typeset -i RET_CODE=${?};

            [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RET_CODE -> ${RET_CODE}";

            if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
            then
                RETURN_CODE=1;

                writeLogEntry "ERROR" "${METHOD_NAME}" "${0}" "${LINENO}" "Failed to add account profile to the target host.";
                writeLogEntry "STDERR" "Failed to execute command. Cannot continue."
            fi
        fi

        [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
        [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
        [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
        [ ! -z "${USER_NAME}" ] && unset USER_NAME;
        [ ! -z "${RET_CODE}" ] && unset RET_CODE;
    done

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "RETURN_CODE -> ${RETURN_CODE}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} -> exit";

    [ ! -z "${HOST_NAME}" ] && unset HOST_NAME;
    [ ! -z "${HOSTLIST[*]}" ] && unset HOSTLIST;
    [ ! -z "${AUTH_DATA}" ] && unset AUTH_DATA;
    [ ! -z "${TARGET_HOST}" ] && unset TARGET_HOST;
    [ ! -z "${ADD_HOST_NAME}" ] && unset ADD_HOST_NAME;
    [ ! -z "${ADD_USER_NAME}" ] && unset ADD_USER_NAME;
    [ ! -z "${USER_NAME}" ] && unset USER_NAME;
    [ ! -z "${RET_CODE}" ] && unset RET_CODE;
    [ ! -z "${SETUP_NEW_SYSTEM}" ] && unset SETUP_NEW_SYSTEM;

    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && typeset -i END_EPOCH=$(date +"%s");
    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && typeset -i RUNTIME=$(( START_EPOCH - END_EPOCH ));
    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && writeLogEntry "PERFORMANCE" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} TOTAL RUNTIME: $(( RUNTIME / 60)) MINUTES, TOTAL ELAPSED: $(( RUNTIME % 60)) SECONDS";
    [ ! -z "${ENABLE_PERFORMANCE}" ] && [ "${ENABLE_PERFORMANCE}" = "${_TRUE}" ] && writeLogEntry "PERFORMANCE" "${METHOD_NAME}" "${0}" "${LINENO}" "${METHOD_NAME} END: $(date +"${TIMESTAMP_OPTS}")";

    return ${RETURN_CODE};
}
