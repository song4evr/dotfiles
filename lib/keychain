#!/usr/bin/env expect
#==============================================================================
#
#          FILE:  loadKeychain
#         USAGE:  ./loadKeychain
#   DESCRIPTION:  Executes an scp connection to a pre-defined server
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <kmhuntly@gmail.com>
#       COMPANY:  ---
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#==============================================================================

if { [ info exists env(ENABLE_VERBOSE) ] } {
    if { [ string match -nocase $env(ENABLE_VERBOSE) "true" ] == 1 } {
        log_user 1;
    } else {
        log_user 0;
    }
} else {
    log_user 0;
}

if { [ info exists env(ENABLE_TRACE) ] } {
    if { [ string match -nocase $env(ENABLE_TRACE) "true" ] == 1 } {
        exp_internal 1;
    }
}

log_file -a $env(HOME)/.log/loadKeychain.log;

set _CNAME "loadKeychain";
set _METHOD_NAME "loadKeychain";
set _LINE_TERMINATOR "\r\n";
set timeout 60;

foreach { _KEYFILE } { id_rsa id_dsa id_ecdsa } {
    set _PASSPHRASE [ exec /usr/java/latest/bin/java -cp ".;$env(CLASSPATH);$env(HOME)/.etc;$env(HOME)/.lib/passwordRepository-1.3.jar" com.hsbc.gbm.ptarch.security.utils.PasswordRepository -showPassword $_KEYFILE 2>/dev/null ];

    eval spawn /usr/bin/env ssh-add $env(HOME)/.ssh/$_KEYFILE;

    expect {
        "Enter passphrase*" {
            exp_send "$_PASSPHRASE\r";

            exp_continue;
        }
        $_LINE_TERMINATOR {
            exp_continue;
        }
        eof {
            append output $expect_out(buffer);
        }
    }
}
